version: '3.7'

services:
  vault:
    image: hashicorp/vault
    ports:
      - "8200:8200"
    volumes:
      - ./vault/data:/vault/data:rw
      - ./vault/config:/vault/config:rw
    cap_add:
      - IPC_LOCK
    entrypoint: vault server -config=/vault/config/config.hcl
    networks:
      backend:
        aliases:
          - "vault-server"

  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "ostock_dev"
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./postgres/data.sql:/docker-entrypoint-initdb.d/2-data.sql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  config-server:
    image: andmarsh/config-server:0.0.1-SNAPSHOT
    build: ./config-server
    depends_on:
      vault:
        condition: service_started
    ports:
      - "8071:8071"
    networks:
      backend:
        aliases:
          - "config-server"

  eureka-server:
    image: andmarsh/eureka-server:0.0.1-SNAPSHOT
    build: ./eureka-server
    ports:
      - "8070:8070"
    depends_on:
      database:
        condition: service_healthy
      config-server:
        condition: service_started
    networks:
      backend:
        aliases:
          - "eureka-server"

  gateway-server:
    image: andmarsh/gateway-server:0.0.1-SNAPSHOT
    build: ./gateway-server
    ports:
      - "8072:8072"
    depends_on:
      database:
        condition: service_healthy
      config-server:
        condition: service_started
      eureka-server:
        condition: service_started
    networks:
      backend:
        aliases:
          - "gateway-server"

  licensing-service:
    image: andmarsh/licensing-service:0.0.1-SNAPSHOT
    build: ./licensing-service
    depends_on:
      database:
        condition: service_healthy
      config-server:
        condition: service_started
    ports:
      - "8080:8080"
    networks:
      backend:
        aliases:
          - "licensing-server"

  organization-service:
    image: andmarsh/organization-service:0.0.1-SNAPSHOT
    build: ./organization-service
    depends_on:
      database:
        condition: service_healthy
      config-server:
        condition: service_started
    ports:
      - "8081:8081"
    networks:
      backend:
        aliases:
          - "organization-service"

networks:
  backend:
    driver: bridge
